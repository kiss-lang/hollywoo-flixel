{(indexAssetPaths "assets")(cc)}

// When the sound device is non-functional, the FlxSound finish callback won't be called.
// Don't let that stop Hollywoo:
{(prop &mut soundPlayed false)(cc)}
(preload
	(newFlxSound "pageFlip" (assetPath "assets" "pageTurn.wav") "page turning"))
{(delay 1 ->:Void (assert soundPlayed)) (cc)}
AWAITPLAYSOUND "pageFlip"
{(set soundPlayed true) (cc)}

// Through scene transitions, set background sprites need to maintain the same size.
(defMacro makeSetAndScene [scene asset]
	`(preload
		(newFlxSet ,asset ,asset)
		(newSceneFromSet ,scene ,asset Day Exterior (new FlxCamera))))

(prop &mut basicSceneKey "")
(preload (set basicSceneKey (assetPath "assets" "grayBackground1280x720.png")))
(makeSetAndScene basicSceneKey basicSceneKey)
(prop &mut sk "")
(prop &mut firstWidth 0.0)
(prop &mut firstHeight 0.0)
(defMacro testSetBackground [asset]
	`(commands
	 	// These happen at preload time
		(makeSetAndScene ,asset ,asset)
		(makeSetAndScene (+ "other" ,asset) ,asset)
		// These happen at runtime:
		{(set sk ,asset) (cc)}
		SETSCENE sk
		(withSceneSet sk set
			(assert (or (= FlxG.width set.width) (= FlxG.height set.height)))
			(set firstWidth set.width)
			(set firstHeight set.height))
		SETSCENE "other$sk"
		SETSCENE sk
		(withSceneSet sk set
			(assert (and (= firstWidth set.width) (= firstHeight set.height))))
		SETSCENE basicSceneKey
		SETSCENE sk
		(withSceneSet sk set
			(assert (and (= firstWidth set.width) (= firstHeight set.height))))))

(testSetBackground (assetPath "assets" "grayBackground1280x720.png"))
(testSetBackground (assetPath "assets" "grayBackground1000x720.png"))
(testSetBackground (assetPath "assets" "grayBackground1280x580.png"))

// Characters on stage right not appearing for some reason:
(preload
	(newActor "white" (new ActorFlxSprite (assetPath "assets" "whiteSquare.png")))
	(newActor "black" (new ActorFlxSprite (assetPath "assets" "blackSquare.png"))))

SETSCENE basicSceneKey
ADDCHARACTER "white" Left FacingRight
ADDCHARACTER "black" Right FacingLeft
(withActor "black" actorRight
	(withActor "white" actorLeft
		(assert (> actorRight.x actorLeft.x))))

// Speaker name not being bumped to right side for stage-right actors while intercutting:
(preload
	(newFlxSet "intercutSet" (assetPath "assets" "whiteBackground1280x720.png"))
	(newSceneFromSet "intercutScene" "intercutSet" Day Exterior (new FlxCamera)))

SETSCENE "intercutScene"
ADDCHARACTER "black" Right FacingLeft
INTERCUT [=>"white" basicSceneKey =>"black" "intercutScene"]

(prop &mut speakerNameTextLeftX 0.0)
{(delay 0.01 ->:Void (set speakerNameTextLeftX flxDirector.speakerNameText.x))(cc)}
NORMALSPEECH "white" "" "Testing line one"
{(delay 0.01 ->:Void {(assert (> flxDirector.speakerNameText.x speakerNameTextLeftX))})(cc)}
NORMALSPEECH "black" "" "Testing line two"
{(delay 0.01 ->:Void (set speakerNameTextLeftX flxDirector.speakerNameText.x))(cc)}
ONPHONESPEECH "white" "" "Testing line one"
{(delay 0.01 ->:Void {(assert (> flxDirector.speakerNameText.x speakerNameTextLeftX))})(cc)}
ONPHONESPEECH "black" "" "Testing line two"

ENDINTERCUT

// Test preset screen positions for props:

SETSCENE basicSceneKey
CLEARCHARACTERS

(var PRESET_SCREEN_POSITIONS
	[
		"ScreenCenter"
		"ScreenCenterLeft"
		"ScreenCenterRight"
		"ScreenUpperLeft"
		"ScreenUpperRight"
		"ScreenLowerLeft"
		"ScreenLowerRight"
		"ScreenLowerCenter"
		"ScreenUpperCenter"
	])

(preload
	(doFor preset PRESET_SCREEN_POSITIONS
		(newProp preset (SpriteTools.textPlate preset FlxDirector.DIALOG_SIZE FlxDirector.SUPER_MARGIN))))

{
	(doFor preset PRESET_SCREEN_POSITIONS
		(addProp preset preset ->:Void {}))
	(director._startWaitForInput cc)
}

// TODO test credits

(Sys.exit 0)